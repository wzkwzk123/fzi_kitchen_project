<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- 加载机器人模型描述参数 -->

    <param name="robot_description" command="rosrun xacro xacro --inorder '$(find auror_assemble)/description/urdf/aurora_min_demo_wu_2.xacro'"/>


    <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

    <rosparam file="$(find aurora_ur5_moveit_config)/config/joint_names.yaml"/>

    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

 


    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>
    -->

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model mrobot -param robot_description"/> 
    <!--
  <include file="$(find aurora_ur5_moveit_config)/launch/move_group.launch>
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
  -->

  
    <include file="$(find gazebo2rviz)/launch/gazebo2moveit.launch">
        <env name="GAZEBO_MODEL_PATH" value="/workspace/src:/workspace/src/universal_robot:~/.gazebo/models:${GAZEBO_MODEL_PATH}"/>
        <env name="MESH_WORKSPACE_PATH" value="/workspace/src"/>
    </include>

        <include file="$(find aurora_ur5_moveit_config)/launch/moveit_rviz.launch">
        <arg name="config" value="true"/>
    </include>
</launch>
<launch>
  <arg name="gui" default="true"/>
  <arg name="start_gazebo" default="true"/>
  <arg name="limited" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="gzweb" default="false"/>
  <arg name="verbose" default="false"/>
  <!--
  <include file="$(find smart_grasp_moveit_config)/launch/move_group.launch"/>
  -->

  <include file="$(find ur5_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
  </include>


  <group if="$(arg start_gazebo)">
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="$(arg paused)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="verbose" value="$(arg verbose)"/>
      
      <arg name="physics" value="ode"/>

    </include>
  </group>

  <include file="$(find ur_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>
  

  <group unless="$(arg gzweb)">
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
      args="-urdf -param robot_description -model smart_grasping_sandbox" respawn="false" output="screen" />
  </group>

  <group if="$(arg gzweb)">
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
      args="-urdf -model smart_grasping_sandbox -file /tmp/smart_grasping_sandbox.gazebo.urdf -package_to_model" respawn="false" output="screen" >
      <param name="dummy_to_generate_gazebo_urdf_file"
        command="rosrun xacro xacro.py -o /tmp/smart_grasping_sandbox.gazebo.urdf '$(find fh_desc)/model.urdf'" />
      <param name="dummy_to_convert_package_to_model"
        command="sed -i s@package://@model://@g /tmp/smart_grasping_sandbox.gazebo.urdf" />
    </node>
  </group>


  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <param name="arm_controller/allow_partial_joints_goal" value="true"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>


</launch>
